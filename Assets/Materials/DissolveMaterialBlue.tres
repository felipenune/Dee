[gd_resource type="ShaderMaterial" load_steps=20 format=2]

[ext_resource path="res://Assets/Texture/noisetexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 0.06 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=4]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=6]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeVectorOp" id=7]

[sub_resource type="VisualShaderNodeScalarConstant" id=8]
constant = 0.02

[sub_resource type="VisualShaderNodeVectorOp" id=9]

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeTextureUniform" id=11]
uniform_name = "TextureUniform"

[sub_resource type="VisualShaderNodeScalarUniform" id=12]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=15]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "uv"

[sub_resource type="VisualShader" id=18]
code = "shader_type canvas_item;
uniform vec4 Color : hint_color;
uniform sampler2D tex_frg_6;uniform float ScalarUniform;
uniform sampler2D TextureUniform;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:15
	vec3 n_out15p0;
	float n_out15p1;
	n_out15p0 = Color.rgb;
	n_out15p1 = Color.a;

// Scalar:18
	float n_out18p0;
	n_out18p0 = 0.020000;

// VectorOp:19
	vec3 n_out19p0;
	n_out19p0 = n_out15p0 + vec3(n_out18p0);

// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	vec4 tex_frg_6_read = texture( tex_frg_6 , n_out2p0.xy );
	n_out6p0 = tex_frg_6_read.rgb;
	n_out6p1 = tex_frg_6_read.a;

// ScalarUniform:4
	float n_out4p0;
	n_out4p0 = ScalarUniform;

// ScalarFunc:5
	float n_out5p0;
	n_out5p0 = sin(n_out4p0);

// ScalarOp:7
	float n_out7p0;
	n_out7p0 = dot(n_out6p0,vec3(0.333333,0.333333,0.333333)) + n_out5p0;

// ScalarOp:11
	float n_in11p1 = 0.06000;
	float n_out11p0;
	n_out11p0 = n_out7p0 - n_in11p1;

// ScalarOp:12
	float n_in12p0 = 1.00000;
	float n_out12p0;
	n_out12p0 = n_in12p0 - n_out11p0;

// ScalarFunc:13
	float n_out13p0;
	n_out13p0 = round(n_out12p0);

// VectorOp:14
	vec3 n_out14p0;
	n_out14p0 = n_out19p0 * vec3(n_out13p0);

// Input:9
	vec3 n_out9p0;
	n_out9p0 = vec3(UV,0.0);

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture( TextureUniform , n_out9p0.xy );
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// VectorOp:16
	vec3 n_out16p0;
	n_out16p0 = n_out14p0 + n_out3p0;

// ScalarFunc:8
	float n_out8p0;
	n_out8p0 = round(n_out7p0);

// ScalarOp:10
	float n_out10p0;
	n_out10p0 = n_out3p1 * n_out8p0;

// Output:0
	COLOR.rgb = n_out16p0;
	COLOR.a = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 502, -363.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1460, 240 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -100, 60 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( 560, -140 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( -120, 160 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( 100, 280 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( 120, 40 )
nodes/fragment/7/node = SubResource( 15 )
nodes/fragment/7/position = Vector2( 320, 200 )
nodes/fragment/8/node = SubResource( 16 )
nodes/fragment/8/position = Vector2( 560, 260 )
nodes/fragment/9/node = SubResource( 17 )
nodes/fragment/9/position = Vector2( 280, -80 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 860, 240 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 560, 100 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 840, 60 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 1040, 40 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 1280, -140 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 880, -400 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 1480, -80 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 860, -240 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 1189, -330.75 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 6, 0, 7, 0, 5, 0, 7, 1, 7, 0, 8, 0, 9, 0, 3, 0, 2, 0, 6, 0, 8, 0, 10, 1, 3, 1, 10, 0, 10, 0, 0, 1, 7, 0, 11, 0, 11, 0, 12, 1, 12, 0, 13, 0, 16, 0, 0, 0, 13, 0, 14, 1, 15, 0, 19, 0, 18, 0, 19, 1, 19, 0, 14, 0, 14, 0, 16, 0, 3, 0, 16, 1 )

[resource]
shader = SubResource( 18 )
shader_param/Color = Color( 0, 0.529412, 1, 1 )
shader_param/ScalarUniform = 0.5
